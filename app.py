from flask import Flask, request, jsonify
import telebot
import logging
import requests
import json
import coloredlogs

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = "8264247176:AAFByVrbcY8K-aanicYu2QK-tYRaFNq0lxY"
PORT = 5000
TUNNEL_URL = 'https://5c86f6cf-9300-44ea-aebf-3f3293066334.tunnel4.com'
CRYPTO_CURRENCY = {'bitcoin', 'ethereum', 'cardano'}
CURRENCY = {'usd', 'eur', 'rub', 'gbp'}


app = Flask(__name__)
bot = telebot.TeleBot(TOKEN, colorful_logs=True)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    chat_id = message.chat.id
    user_data[chat_id] = {}  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É bitcoin, ethereum, cardano: ")
    bot.register_next_step_handler(message, get_crypto)


# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
def get_crypto(message):
    chat_id = message.chat.id
    crypto_id = str(message.text)
    if crypto_id in CRYPTO_CURRENCY:
        user_data[chat_id]['crypto_id'] = crypto_id
        bot.send_message(chat_id, "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã usd, eur, rub, gbp: ")
        bot.register_next_step_handler(message, get_currency)
    else:
        bot.send_message(chat_id, "–û—à–∏–±–∫–∞! –ù–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏ –≤–≤–µ–¥–∏ bitcoin, ethereum, cardano: ")
        bot.register_next_step_handler(message, get_crypto)


# –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã, –∑–∞–ø—Ä–æ—Å  –∏ –≤—ã–≤–æ–¥ –∫—É—Ä—Å–∞
def get_currency(message):
    chat_id = message.chat.id
    currency_code = str(message.text)
    response = {}
    response_json = {}
    if currency_code in CURRENCY:
        crypto_id = user_data[chat_id]['crypto_id']

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫—É—Ä—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∫ —Ñ–∏–∞—Ç–Ω–æ–π –≤–∞–ª—é—Ç–µ —á–µ—Ä–µ–∑  https://api.coingecko.com/api/:
        try:    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞ –∫ —É–¥–∞–ª–µ–Ω–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—É:
            header = f"https://api.coingecko.com/api/v3/simple/price?ids={crypto_id}&vs_currencies={currency_code}"
            response = requests.get(header)
            response_json = json.loads(response.text)
        except Exception as e:
            bot.send_message(chat_id, f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞:{response} –∏ {e}")

        bot.send_message(   #–ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω, —Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ json –∏ –≤—ã—Å—ã–ª–∞–µ–º –∫—É—Ä—Å –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç –±–æ—Ç–∞:
            chat_id, f"üî¢ –ö—É—Ä—Å {crypto_id}/{currency_code} = {response_json[crypto_id][currency_code]}")
        del user_data[chat_id]  # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    else:
        bot.send_message(chat_id, "–û—à–∏–±–∫–∞! –ù–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏ –≤–≤–µ–¥–∏ usd, eur, rub, gbp: ")
        bot.register_next_step_handler(message, get_currency)

# –¢–µ—Å—Ç –≤–µ—Ä–≤–µ—Ä–∞ flask
@app.route("/")
def home():
    return "–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç —à—Ç–∞—Ç–Ω–æ!!!"


# –í–µ–±—Ö—É–∫ –¥–ª—è Flask
@app.route('/webhook', methods=['POST'])
def webhook():
    if request.headers.get('content-type') == 'application/json':
        json_data = request.get_json()
        update = telebot.types.Update.de_json(json_data)
        bot.process_new_updates([update])
        return jsonify({"status": "ok"}), 200
    return jsonify({"status": "bad request"}), 400


# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞
@app.route('/set_webhook', methods=['GET'])
def set_webhook():
    webhook_url = TUNNEL_URL
    bot.remove_webhook()
    bot.set_webhook(url=webhook_url)
    return f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}"


if __name__ == '__main__':
    app.run(port=PORT, debug=True)
