from flask import Flask, request, jsonify
import telebot
from telebot import types
import logging


# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = "8162915842:AAGI51F4JzqFsq5g6T6UI9nt8dNH82oWRKY"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –æ—Ç @BotFather
PORT = 5000

app = Flask(__name__)
bot = telebot.TeleBot(TOKEN)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    chat_id = message.chat.id
    user_data[chat_id] = {}  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä. üßÆ\n–í–≤–µ–¥–∏ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ:")
    bot.register_next_step_handler(message, get_first_number)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞
def get_first_number(message):
    chat_id = message.chat.id
    try:
        num1 = float(message.text)
        user_data[chat_id]['num1'] = num1
        bot.send_message(chat_id, "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ:")
        bot.register_next_step_handler(message, get_second_number)
    except ValueError:
        bot.send_message(chat_id, "–û—à–∏–±–∫–∞! –≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑:")
        bot.register_next_step_handler(message, get_first_number)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —á–∏—Å–ª–∞ –∏ –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
def get_second_number(message):
    chat_id = message.chat.id
    try:
        num2 = float(message.text)
        num1 = user_data[chat_id]['num1']
        
        # –í—ã—á–∏—Å–ª—è–µ–º —Å—É–º–º—É –∏ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
        sum_result = num1 + num2
        product_result = num1 * num2
        
        bot.send_message(
            chat_id,
            f"üî¢ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:\n"
            f"–°—É–º–º–∞: {num1} + {num2} = {sum_result}\n"
            f"–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ: {num1} * {num2} = {product_result}"
        )
        del user_data[chat_id]  # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    except ValueError:
        bot.send_message(chat_id, "–û—à–∏–±–∫–∞! –≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑:")
        bot.register_next_step_handler(message, get_second_number)

# –í–µ–±—Ö—É–∫ –¥–ª—è Flask
@app.route('/webhook', methods=['POST'])
def webhook():
    if request.headers.get('content-type') == 'application/json':
        json_data = request.get_json()
        update = telebot.types.Update.de_json(json_data)
        bot.process_new_updates([update])
        return jsonify({"status": "ok"}), 200
    return jsonify({"status": "bad request"}), 400

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ 
@app.route('/set_webhook', methods=['GET'])
def set_webhook():
    url_tunnel = 'https://9279c9d7-b4e2-46e1-917e-8bd5cd9facef.tunnel4.com'
    webhook_url = f"{url_tunnel}/webhook"
    bot.remove_webhook()
    bot.set_webhook(url=webhook_url)
    logger.info(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
    return f"Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω! URL: {webhook_url}"

if __name__ == '__main__':
    app.run(port=PORT)
